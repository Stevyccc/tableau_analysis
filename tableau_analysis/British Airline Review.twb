<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Book1_17388173426650' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
        <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        <members>
          <member value='&quot;Overall Rating&quot;' />
          <member value='&quot;Cabin Staff Service&quot;' />
          <member value='&quot;Entertainment&quot;' />
          <member value='&quot;Food&quot;' />
          <member value='&quot;Ground Service&quot;' />
          <member value='&quot;Seat Comfort&quot;' />
          <member value='&quot;Value&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='ba_reviews.csv+ (Multiple Connections)' inline='true' name='federated.1k5levf0j3ilyy17r38ci11gddm8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ba_reviews' name='textscan.13a7ie219lmsj21dysgm707adyz3'>
            <connection class='textscan' directory='/Users/zehuacheng/Downloads' filename='ba_reviews.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Countries' name='textscan.0sezsuj05txgxn18jk1li18yyyga'>
            <connection class='textscan' directory='/Users/zehuacheng/Downloads' filename='Countries.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.13a7ie219lmsj21dysgm707adyz3' name='ba_reviews.csv' table='[ba_reviews#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='header' ordinal='0' />
              <column datatype='string' name='author' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='place' ordinal='3' />
              <column datatype='string' name='content' ordinal='4' />
              <column datatype='string' name='aircraft' ordinal='5' />
              <column datatype='string' name='traveller_type' ordinal='6' />
              <column datatype='string' name='seat_type' ordinal='7' />
              <column datatype='string' name='route' ordinal='8' />
              <column datatype='date' name='date_flown' ordinal='9' />
              <column datatype='string' name='recommended' ordinal='10' />
              <column datatype='string' name='trip_verified' ordinal='11' />
              <column datatype='integer' name='rating' ordinal='12' />
              <column datatype='integer' name='seat_comfort' ordinal='13' />
              <column datatype='integer' name='cabin_staff_service' ordinal='14' />
              <column datatype='integer' name='food_beverages' ordinal='15' />
              <column datatype='integer' name='ground_service' ordinal='16' />
              <column datatype='integer' name='value_for_money' ordinal='17' />
              <column datatype='integer' name='entertainment' ordinal='18' />
            </columns>
          </relation>
          <relation connection='textscan.13a7ie219lmsj21dysgm707adyz3' name='Countries.csv' table='[Countries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='string' name='Continent' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>header</remote-name>
            <remote-type>129</remote-type>
            <local-name>[header]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>header</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[author]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>author</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>content</remote-name>
            <remote-type>129</remote-type>
            <local-name>[content]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>content</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aircraft]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>aircraft</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>traveller_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[traveller_type]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>traveller_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seat_type]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>seat_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_flown</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_flown]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>date_flown</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recommended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[recommended]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>recommended</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_verified</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_verified]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>trip_verified</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_comfort</remote-name>
            <remote-type>20</remote-type>
            <local-name>[seat_comfort]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>seat_comfort</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_staff_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cabin_staff_service]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>cabin_staff_service</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_beverages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[food_beverages]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>food_beverages</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ground_service]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>ground_service</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_for_money</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value_for_money]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>value_for_money</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entertainment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[entertainment]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>entertainment</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
          <bin default-name='false' value='&quot;Various&quot;'>
            <value>&quot;777&quot;</value>
            <value>&quot;777-300 and A320&quot;</value>
            <value>&quot;787&quot;</value>
            <value>&quot;A19&quot;</value>
            <value>&quot;A219&quot;</value>
            <value>&quot;A230&quot;</value>
            <value>&quot;A318&quot;</value>
            <value>&quot;A319 / A380 / Boeing 737&quot;</value>
            <value>&quot;A319 / Boeing 747&quot;</value>
            <value>&quot;A319 / Boeing 747-400&quot;</value>
            <value>&quot;A319 / Boeing 777&quot;</value>
            <value>&quot;A319 / Boeing 787-8&quot;</value>
            <value>&quot;A319 / Boeing 787-9&quot;</value>
            <value>&quot;A319 / Boeing 789&quot;</value>
            <value>&quot;A319 / Boeing777&quot;</value>
            <value>&quot;A319/320&quot;</value>
            <value>&quot;A319/A320&quot;</value>
            <value>&quot;A320 / Boeing 747-400&quot;</value>
            <value>&quot;A320 / Boeing 767&quot;</value>
            <value>&quot;A320 / Boeing 777&quot;</value>
            <value>&quot;A320 / Boeing 777-200&quot;</value>
            <value>&quot;A320 / Boeing 787&quot;</value>
            <value>&quot;A320 / Boeing 787-9&quot;</value>
            <value>&quot;A320 A350&quot;</value>
            <value>&quot;A320 Finnair&quot;</value>
            <value>&quot;A320 neo&quot;</value>
            <value>&quot;A320 Neo&quot;</value>
            <value>&quot;A320-200&quot;</value>
            <value>&quot;A320-233&quot;</value>
            <value>&quot;A320, A380&quot;</value>
            <value>&quot;A320, Boeing 787&quot;</value>
            <value>&quot;A320/319&quot;</value>
            <value>&quot;A320/A319&quot;</value>
            <value>&quot;A320/B788&quot;</value>
            <value>&quot;A320neo&quot;</value>
            <value>&quot;A320Neo&quot;</value>
            <value>&quot;A320NEO&quot;</value>
            <value>&quot;A321 / Boeing 747-400&quot;</value>
            <value>&quot;A321 / Boeing 777&quot;</value>
            <value>&quot;A321 / Boeing 777-300&quot;</value>
            <value>&quot;A321 / Boeing 787-9&quot;</value>
            <value>&quot;A321 neo&quot;</value>
            <value>&quot;A321 Neo&quot;</value>
            <value>&quot;A321-200&quot;</value>
            <value>&quot;A321-neo&quot;</value>
            <value>&quot;A321neo&quot;</value>
            <value>&quot;A321Neo&quot;</value>
            <value>&quot;A321NEO&quot;</value>
            <value>&quot;A322&quot;</value>
            <value>&quot;A330&quot;</value>
            <value>&quot;A340-300&quot;</value>
            <value>&quot;A340-300, A320&quot;</value>
            <value>&quot;A350&quot;</value>
            <value>&quot;A350-1000&quot;</value>
            <value>&quot;A380 / A319&quot;</value>
            <value>&quot;A380 / A320&quot;</value>
            <value>&quot;A380 / Boeing 747-400&quot;</value>
            <value>&quot;A380 / Boeing 777&quot;</value>
            <value>&quot;A380 and 747&quot;</value>
            <value>&quot;A380 and Boeing 747&quot;</value>
            <value>&quot;A380 and Boeing 767&quot;</value>
            <value>&quot;A380 and Boeing 777&quot;</value>
            <value>&quot;A380-800&quot;</value>
            <value>&quot;A380/A320&quot;</value>
            <value>&quot;Airbus A32&quot;</value>
            <value>&quot;Airbus A320&quot;</value>
            <value>&quot;B737-400 / A380 / A319&quot;</value>
            <value>&quot;B747-400&quot;</value>
            <value>&quot;B747-400 in retro&quot;</value>
            <value>&quot;B777&quot;</value>
            <value>&quot;B777-200&quot;</value>
            <value>&quot;B777-300ER / A320 / A380&quot;</value>
            <value>&quot;Boeing 737&quot;</value>
            <value>&quot;Boeing 737 800&quot;</value>
            <value>&quot;Boeing 737-800&quot;</value>
            <value>&quot;Boeing 744&quot;</value>
            <value>&quot;Boeing 747 / 777&quot;</value>
            <value>&quot;Boeing 747 / A320&quot;</value>
            <value>&quot;Boeing 747 / A380&quot;</value>
            <value>&quot;Boeing 747 &amp; A319&quot;</value>
            <value>&quot;Boeing 747 400&quot;</value>
            <value>&quot;Boeing 747 and Boeing 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777-200&quot;</value>
            <value>&quot;Boeing 747-400 / A319&quot;</value>
            <value>&quot;Boeing 747-400 / A320&quot;</value>
            <value>&quot;Boeing 747-400 / A380&quot;</value>
            <value>&quot;Boeing 747-400 /A380&quot;</value>
            <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
            <value>&quot;Boeing 757&quot;</value>
            <value>&quot;Boeing 767&quot;</value>
            <value>&quot;Boeing 767-300&quot;</value>
            <value>&quot;Boeing 767, A319&quot;</value>
            <value>&quot;Boeing 777&quot;</value>
            <value>&quot;Boeing 777 - 200&quot;</value>
            <value>&quot;Boeing 777 -200&quot;</value>
            <value>&quot;Boeing 777 / 747&quot;</value>
            <value>&quot;Boeing 777 / A320&quot;</value>
            <value>&quot;Boeing 777 / A380&quot;</value>
            <value>&quot;Boeing 777 200&quot;</value>
            <value>&quot;Boeing 777 200/300&quot;</value>
            <value>&quot;Boeing 777 and Boeing 787&quot;</value>
            <value>&quot;Boeing 777-200 / 747-400&quot;</value>
            <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
            <value>&quot;Boeing 777-200 and A319&quot;</value>
            <value>&quot;Boeing 777-200 ER&quot;</value>
            <value>&quot;Boeing 777-200/300&quot;</value>
            <value>&quot;Boeing 777-200ER&quot;</value>
            <value>&quot;Boeing 777-236 ER&quot;</value>
            <value>&quot;Boeing 777-300&quot;</value>
            <value>&quot;Boeing 777-300 / A380&quot;</value>
            <value>&quot;Boeing 777-300ER&quot;</value>
            <value>&quot;Boeing 777-300ER / A320&quot;</value>
            <value>&quot;Boeing 787 / A320&quot;</value>
            <value>&quot;Boeing 787 Dreamliner&quot;</value>
            <value>&quot;Boeing 787-10&quot;</value>
            <value>&quot;Boeing 787-8&quot;</value>
            <value>&quot;Boeing 787-8 / 787-9&quot;</value>
            <value>&quot;Boeing 787-800&quot;</value>
            <value>&quot;Boeing 787-9&quot;</value>
            <value>&quot;Boeing 787-9 / 777&quot;</value>
            <value>&quot;Boeing 787-9 / A319&quot;</value>
            <value>&quot;Boeing 787-9 / A380-800&quot;</value>
            <value>&quot;Boeing 787-9, A320-200&quot;</value>
            <value>&quot;Boeing 787-9, A380&quot;</value>
            <value>&quot;Boeing 787-900&quot;</value>
            <value>&quot;Boeing 787(9)&quot;</value>
            <value>&quot;Boieng 777-200&quot;</value>
            <value>&quot;Dreamliner&quot;</value>
            <value>&quot;E-190&quot;</value>
            <value>&quot;E170 / A319&quot;</value>
            <value>&quot;E190&quot;</value>
            <value>&quot;EMB190&quot;</value>
            <value>&quot;Embraer&quot;</value>
            <value>&quot;Embraer 170&quot;</value>
            <value>&quot;Embraer 190&quot;</value>
            <value>&quot;Embraer 195&quot;</value>
            <value>&quot;Embraer-190&quot;</value>
            <value>&quot;SAAB 2000&quot;</value>
            <value>&quot;Various&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Metric Selected' datatype='integer' name='[Calculation_644085159531372545]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#10;WHEN &apos;Overall Rating&apos; then [rating]&#10;WHEN &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#10;WHEN &apos;Entertainment&apos; then [entertainment]&#10;WHEN &apos;Food&apos; then [food_beverages]&#10;WHEN &apos;Ground Service&apos; then [ground_service]&#10;WHEN &apos;Seat Comfort&apos; then [seat_comfort]&#10;WHEN &apos;Value&apos; then [value_for_money]&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Countries.csv' datatype='table' name='[__tableau_internal_object_id__].[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]' role='measure' type='quantitative' />
      <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]' role='measure' type='quantitative' />
      <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
      <column caption='Author' datatype='string' name='[author]' role='dimension' type='nominal' />
      <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
      <column caption='Content' datatype='string' name='[content]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Flown' datatype='date' name='[date_flown]' role='dimension' type='ordinal' />
      <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
      <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
      <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
      <column caption='Header' datatype='string' name='[header]' role='dimension' type='nominal' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
      <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
      <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      <column caption='Trip Verified' datatype='string' name='[trip_verified]' role='dimension' type='nominal' />
      <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Aircraft (group))' hidden='true' name='[Action (Aircraft (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Aircraft (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Place)' hidden='true' name='[Action (Place)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[place]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/hq/x90l3bf50td2st_n8y0j9lbc0000gn/T/tableau-temp/#TableauTemp_07o4url1gi0xfe11d9tqt01jbnia.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/06/2025 03:39:46 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE' table='[Extract].[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]' type='table' />
            <relation name='Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB' table='[Extract].[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]' type='table' />
          </relation>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>header</remote-name>
              <remote-type>129</remote-type>
              <local-name>[header]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>header</remote-alias>
              <ordinal>0</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1207</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>author</remote-name>
              <remote-type>129</remote-type>
              <local-name>[author]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>author</remote-alias>
              <ordinal>1</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>738</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>863</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>place</remote-name>
              <remote-type>129</remote-type>
              <local-name>[place]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>place</remote-alias>
              <ordinal>3</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>content</remote-name>
              <remote-type>129</remote-type>
              <local-name>[content]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>content</remote-alias>
              <ordinal>4</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1324</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aircraft</remote-name>
              <remote-type>129</remote-type>
              <local-name>[aircraft]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>aircraft</remote-alias>
              <ordinal>5</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>140</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>traveller_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[traveller_type]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>traveller_type</remote-alias>
              <ordinal>6</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seat_type]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>seat_type</remote-alias>
              <ordinal>7</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>129</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>8</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>733</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_flown</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_flown]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>date_flown</remote-alias>
              <ordinal>9</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>87</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>recommended</remote-name>
              <remote-type>129</remote-type>
              <local-name>[recommended]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>recommended</remote-alias>
              <ordinal>10</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_verified</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trip_verified]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>trip_verified</remote-alias>
              <ordinal>11</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>12</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_comfort</remote-name>
              <remote-type>20</remote-type>
              <local-name>[seat_comfort]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>seat_comfort</remote-alias>
              <ordinal>13</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cabin_staff_service</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cabin_staff_service]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>cabin_staff_service</remote-alias>
              <ordinal>14</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>food_beverages</remote-name>
              <remote-type>20</remote-type>
              <local-name>[food_beverages]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>food_beverages</remote-alias>
              <ordinal>15</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ground_service</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ground_service]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>ground_service</remote-alias>
              <ordinal>16</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value_for_money</remote-name>
              <remote-type>20</remote-type>
              <local-name>[value_for_money]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>value_for_money</remote-alias>
              <ordinal>17</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>entertainment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[entertainment]</local-name>
              <parent-name>[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]</parent-name>
              <remote-alias>entertainment</remote-alias>
              <ordinal>18</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>19</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>251</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>20</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>250</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>21</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>22</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Countries.csv' id='Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB'>
            <properties context=''>
              <relation connection='textscan.13a7ie219lmsj21dysgm707adyz3' name='Countries.csv' table='[Countries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='string' name='Continent' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB' table='[Extract].[Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB]' type='table' />
            </properties>
          </object>
          <object caption='ba_reviews.csv' id='ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE'>
            <properties context=''>
              <relation connection='textscan.13a7ie219lmsj21dysgm707adyz3' name='ba_reviews.csv' table='[ba_reviews#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='header' ordinal='0' />
                  <column datatype='string' name='author' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='place' ordinal='3' />
                  <column datatype='string' name='content' ordinal='4' />
                  <column datatype='string' name='aircraft' ordinal='5' />
                  <column datatype='string' name='traveller_type' ordinal='6' />
                  <column datatype='string' name='seat_type' ordinal='7' />
                  <column datatype='string' name='route' ordinal='8' />
                  <column datatype='date' name='date_flown' ordinal='9' />
                  <column datatype='string' name='recommended' ordinal='10' />
                  <column datatype='string' name='trip_verified' ordinal='11' />
                  <column datatype='integer' name='rating' ordinal='12' />
                  <column datatype='integer' name='seat_comfort' ordinal='13' />
                  <column datatype='integer' name='cabin_staff_service' ordinal='14' />
                  <column datatype='integer' name='food_beverages' ordinal='15' />
                  <column datatype='integer' name='ground_service' ordinal='16' />
                  <column datatype='integer' name='value_for_money' ordinal='17' />
                  <column datatype='integer' name='entertainment' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE' table='[Extract].[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[place]' />
              <expression op='[Country]' />
            </expression>
            <first-end-point object-id='ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE' />
            <second-end-point object-id='Countries.csv_D6E5AEEE2773425FB91D82ACAB7209DB' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
    <datasource caption='realtor-data' inline='true' name='federated.1n45obb0bhx3df15o2wc31hg7mv3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='realtor-data' name='textscan.1d1319v05308x61fk5st20imogm5'>
            <connection class='textscan' directory='/Users/zehuacheng/Personal Projects/tableau_analysis' filename='realtor-data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1d1319v05308x61fk5st20imogm5' name='realtor-data.csv' table='[realtor-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='brokered_by' ordinal='0' />
            <column datatype='string' name='status' ordinal='1' />
            <column datatype='real' name='price' ordinal='2' />
            <column datatype='integer' name='bed' ordinal='3' />
            <column datatype='integer' name='bath' ordinal='4' />
            <column datatype='real' name='acre_lot' ordinal='5' />
            <column datatype='real' name='street' ordinal='6' />
            <column datatype='string' name='city' ordinal='7' />
            <column datatype='string' name='state' ordinal='8' />
            <column datatype='integer' name='zip_code' ordinal='9' />
            <column datatype='real' name='house_size' ordinal='10' />
            <column datatype='date' name='prev_sold_date' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brokered_by</remote-name>
            <remote-type>5</remote-type>
            <local-name>[brokered_by]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>brokered_by</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bed]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>bed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bath]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>bath</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>acre_lot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[acre_lot]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>acre_lot</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street</remote-name>
            <remote-type>5</remote-type>
            <local-name>[street]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>street</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>house_size</remote-name>
            <remote-type>5</remote-type>
            <local-name>[house_size]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>house_size</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_sold_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[prev_sold_date]</local-name>
            <parent-name>[realtor-data.csv]</parent-name>
            <remote-alias>prev_sold_date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Metric Selected' datatype='real' name='[Calculation_644085159529037824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#10;when &apos;City&apos; then [city]&#10;when &apos;Acre Lot&apos; then [acre_lot]&#10;when &apos;Bath&apos; then [bath]&#10;when &apos;Bed&apos; then [bed]&#10;END' />
      </column>
      <column caption='realtor-data.csv' datatype='table' name='[__tableau_internal_object_id__].[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]' role='measure' type='quantitative' />
      <column caption='Acre Lot' datatype='real' name='[acre_lot]' role='measure' type='quantitative' />
      <column caption='Bath' datatype='integer' name='[bath]' role='measure' type='quantitative' />
      <column caption='Bed' datatype='integer' name='[bed]' role='measure' type='quantitative' />
      <column caption='Brokered By' datatype='real' name='[brokered_by]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='House Size' datatype='real' name='[house_size]' role='measure' type='quantitative' />
      <column caption='Prev Sold Date' datatype='date' name='[prev_sold_date]' role='dimension' type='ordinal' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Street' datatype='real' name='[street]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/hq/x90l3bf50td2st_n8y0j9lbc0000gn/T/tableau-temp/#TableauTemp_1fysjj90qcxtdo147i1yo1ab3don.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/06/2025 03:37:06 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>brokered_by</remote-name>
              <remote-type>5</remote-type>
              <local-name>[brokered_by]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>brokered_by</remote-alias>
              <ordinal>0</ordinal>
              <family>realtor-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>126811</approx-count>
              <contains-null>true</contains-null>
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>status</remote-alias>
              <ordinal>1</ordinal>
              <family>realtor-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>2</ordinal>
              <family>realtor-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27973</approx-count>
              <contains-null>true</contains-null>
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[bed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bed</remote-alias>
              <ordinal>3</ordinal>
              <family>realtor-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bath</remote-name>
              <remote-type>20</remote-type>
              <local-name>[bath]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bath</remote-alias>
              <ordinal>4</ordinal>
              <family>realtor-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>acre_lot</remote-name>
              <remote-type>5</remote-type>
              <local-name>[acre_lot]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>acre_lot</remote-alias>
              <ordinal>5</ordinal>
              <family>realtor-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8981</approx-count>
              <contains-null>true</contains-null>
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>street</remote-name>
              <remote-type>5</remote-type>
              <local-name>[street]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>street</remote-alias>
              <ordinal>6</ordinal>
              <family>realtor-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2103929</approx-count>
              <contains-null>true</contains-null>
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>7</ordinal>
              <family>realtor-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33274</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>8</ordinal>
              <family>realtor-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zip_code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[zip_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zip_code</remote-alias>
              <ordinal>9</ordinal>
              <family>realtor-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67289</approx-count>
              <contains-null>true</contains-null>
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>house_size</remote-name>
              <remote-type>5</remote-type>
              <local-name>[house_size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>house_size</remote-alias>
              <ordinal>10</ordinal>
              <family>realtor-data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17599</approx-count>
              <contains-null>true</contains-null>
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prev_sold_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[prev_sold_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>prev_sold_date</remote-alias>
              <ordinal>11</ordinal>
              <family>realtor-data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>37689</approx-count>
              <contains-null>true</contains-null>
              <object-id>[realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='realtor-data.csv' id='realtor-data.csv_551EC72377A24C1B83F59480D29D4EC0'>
            <properties context=''>
              <relation connection='textscan.1d1319v05308x61fk5st20imogm5' name='realtor-data.csv' table='[realtor-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='brokered_by' ordinal='0' />
                  <column datatype='string' name='status' ordinal='1' />
                  <column datatype='real' name='price' ordinal='2' />
                  <column datatype='integer' name='bed' ordinal='3' />
                  <column datatype='integer' name='bath' ordinal='4' />
                  <column datatype='real' name='acre_lot' ordinal='5' />
                  <column datatype='real' name='street' ordinal='6' />
                  <column datatype='string' name='city' ordinal='7' />
                  <column datatype='string' name='state' ordinal='8' />
                  <column datatype='integer' name='zip_code' ordinal='9' />
                  <column datatype='real' name='house_size' ordinal='10' />
                  <column datatype='date' name='prev_sold_date' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1k5levf0j3ilyy17r38ci11gddm8'>
      <datasources>
        <datasource caption='ba_reviews.csv+ (Multiple Connections)' name='federated.1k5levf0j3ilyy17r38ci11gddm8' />
      </datasources>
      <datasource-dependencies datasource='federated.1k5levf0j3ilyy17r38ci11gddm8'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Various&quot;'>
              <value>&quot;777&quot;</value>
              <value>&quot;777-300 and A320&quot;</value>
              <value>&quot;787&quot;</value>
              <value>&quot;A19&quot;</value>
              <value>&quot;A219&quot;</value>
              <value>&quot;A230&quot;</value>
              <value>&quot;A318&quot;</value>
              <value>&quot;A319 / A380 / Boeing 737&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 747-400&quot;</value>
              <value>&quot;A319 / Boeing 777&quot;</value>
              <value>&quot;A319 / Boeing 787-8&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing 789&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A319/A320&quot;</value>
              <value>&quot;A320 / Boeing 747-400&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 777-200&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 / Boeing 787-9&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 neo&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320-233&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320, Boeing 787&quot;</value>
              <value>&quot;A320/319&quot;</value>
              <value>&quot;A320/A319&quot;</value>
              <value>&quot;A320/B788&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A320Neo&quot;</value>
              <value>&quot;A320NEO&quot;</value>
              <value>&quot;A321 / Boeing 747-400&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 / Boeing 777-300&quot;</value>
              <value>&quot;A321 / Boeing 787-9&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-200&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A321Neo&quot;</value>
              <value>&quot;A321NEO&quot;</value>
              <value>&quot;A322&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / A319&quot;</value>
              <value>&quot;A380 / A320&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 / Boeing 777&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380 and Boeing 747&quot;</value>
              <value>&quot;A380 and Boeing 767&quot;</value>
              <value>&quot;A380 and Boeing 777&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;A380/A320&quot;</value>
              <value>&quot;Airbus A32&quot;</value>
              <value>&quot;Airbus A320&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B747-400 in retro&quot;</value>
              <value>&quot;B777&quot;</value>
              <value>&quot;B777-200&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737&quot;</value>
              <value>&quot;Boeing 737 800&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / 777&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 &amp; A319&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777-200&quot;</value>
              <value>&quot;Boeing 747-400 / A319&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 747-400 / A380&quot;</value>
              <value>&quot;Boeing 747-400 /A380&quot;</value>
              <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
              <value>&quot;Boeing 757&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 767-300&quot;</value>
              <value>&quot;Boeing 767, A319&quot;</value>
              <value>&quot;Boeing 777&quot;</value>
              <value>&quot;Boeing 777 - 200&quot;</value>
              <value>&quot;Boeing 777 -200&quot;</value>
              <value>&quot;Boeing 777 / 747&quot;</value>
              <value>&quot;Boeing 777 / A320&quot;</value>
              <value>&quot;Boeing 777 / A380&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 200/300&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200 / 747-400&quot;</value>
              <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
              <value>&quot;Boeing 777-200 and A319&quot;</value>
              <value>&quot;Boeing 777-200 ER&quot;</value>
              <value>&quot;Boeing 777-200/300&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300 / A380&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 777-300ER / A320&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787 Dreamliner&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-8 / 787-9&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9 / 777&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-9 / A380-800&quot;</value>
              <value>&quot;Boeing 787-9, A320-200&quot;</value>
              <value>&quot;Boeing 787-9, A380&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;Boieng 777-200&quot;</value>
              <value>&quot;Dreamliner&quot;</value>
              <value>&quot;E-190&quot;</value>
              <value>&quot;E170 / A319&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;EMB190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
              <value>&quot;Embraer 195&quot;</value>
              <value>&quot;Embraer-190&quot;</value>
              <value>&quot;SAAB 2000&quot;</value>
              <value>&quot;Various&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]'>
        <groupfilter function='level-members' level='[Aircraft (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:Continent:nk]'>
        <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:seat_type:nk]'>
        <groupfilter function='level-members' level='[none:seat_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:traveller_type:nk]'>
        <groupfilter function='level-members' level='[none:traveller_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]' included-values='in-range'>
        <min>#2016-03-01 00:00:00#</min>
        <max>#2023-10-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_39FA2ABE96414E73A504A185FB5ADFEF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_805F71D6924D420981E5EA480FEF84A6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_401C207288B943AB88B3C0D0B8996331]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Aircraft' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Aircraft'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Aircraft</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews.csv+ (Multiple Connections)' name='federated.1k5levf0j3ilyy17r38ci11gddm8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1k5levf0j3ilyy17r38ci11gddm8'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_644085159531372545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#10;WHEN &apos;Overall Rating&apos; then [rating]&#10;WHEN &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#10;WHEN &apos;Entertainment&apos; then [entertainment]&#10;WHEN &apos;Food&apos; then [food_beverages]&#10;WHEN &apos;Ground Service&apos; then [ground_service]&#10;WHEN &apos;Seat Comfort&apos; then [seat_comfort]&#10;WHEN &apos;Value&apos; then [value_for_money]&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_644085159531372545]' derivation='Avg' name='[avg:Calculation_644085159531372545:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action1_39FA2ABE96414E73A504A185FB5ADFEF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (Place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action2_805F71D6924D420981E5EA480FEF84A6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:Continent:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:seat_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:traveller_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (MONTH(Date))]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (Place)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]' scope='cols' value='Number of Reviews' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='title' class='0' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' scope='cols' value='Average' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e8eadf</color>
                <color>#e0e3cf</color>
                <color>#d8ddbf</color>
                <color>#d0d6af</color>
                <color>#c8d0a1</color>
                <color>#c1c992</color>
                <color>#b9c285</color>
                <color>#b1bc78</color>
                <color>#aab56b</color>
                <color>#a3af60</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' />
              <text column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' />
              <text column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#555555'><![CDATA[<[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Average:	<[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Number of Reviews: <[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' />
              <text column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#555555'><![CDATA[<[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Average: <[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Number of Reviews:	<[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]</rows>
        <cols>([federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk] + [federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk])</cols>
      </table>
      <simple-id uuid='{74D484D7-AACC-4AC9-B320-250F44FABDE6}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews.csv+ (Multiple Connections)' name='federated.1k5levf0j3ilyy17r38ci11gddm8' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1k5levf0j3ilyy17r38ci11gddm8'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_644085159531372545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#10;WHEN &apos;Overall Rating&apos; then [rating]&#10;WHEN &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#10;WHEN &apos;Entertainment&apos; then [entertainment]&#10;WHEN &apos;Food&apos; then [food_beverages]&#10;WHEN &apos;Ground Service&apos; then [ground_service]&#10;WHEN &apos;Seat Comfort&apos; then [seat_comfort]&#10;WHEN &apos;Value&apos; then [value_for_money]&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_644085159531372545]' derivation='Avg' name='[avg:Calculation_644085159531372545:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action1_39FA2ABE96414E73A504A185FB5ADFEF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:seat_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:traveller_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:Continent:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Longitude (generated)]' field-type='quantitative' max='9187895.8641163446' min='-7307628.0775088593' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Latitude (generated)]' field-type='quantitative' max='9382569.2583601996' min='-1633085.7394901211' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e8eadf</color>
                <color>#e0e3cf</color>
                <color>#d8ddbf</color>
                <color>#d0d6af</color>
                <color>#c8d0a1</color>
                <color>#c1c992</color>
                <color>#b9c285</color>
                <color>#b1bc78</color>
                <color>#aab56b</color>
                <color>#a3af60</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.74000000953674316' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' />
              <lod column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:place:nk]' />
              <tooltip column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]' />
              <geometry column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#555555'><![CDATA[<[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:place:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Average <[Parameters].[Parameter 1]><[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Number of Reviews:<[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Latitude (generated)]</rows>
        <cols>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1E6DD1F5-2091-48BA-B4DD-DC90C4A10C3B}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews.csv+ (Multiple Connections)' name='federated.1k5levf0j3ilyy17r38ci11gddm8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1k5levf0j3ilyy17r38ci11gddm8'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_644085159531372545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#10;WHEN &apos;Overall Rating&apos; then [rating]&#10;WHEN &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#10;WHEN &apos;Entertainment&apos; then [entertainment]&#10;WHEN &apos;Food&apos; then [food_beverages]&#10;WHEN &apos;Ground Service&apos; then [ground_service]&#10;WHEN &apos;Seat Comfort&apos; then [seat_comfort]&#10;WHEN &apos;Value&apos; then [value_for_money]&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_644085159531372545]' derivation='Avg' name='[avg:Calculation_644085159531372545:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (Place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action2_805F71D6924D420981E5EA480FEF84A6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:Continent:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:seat_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:traveller_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (Place)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#555555'><![CDATA[<[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Average<[Parameters].[Parameter 1]>: <[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a3af60' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]</rows>
        <cols>[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{C78FA642-1B1C-44D0-BC3C-179732C0EF9A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews.csv+ (Multiple Connections)' name='federated.1k5levf0j3ilyy17r38ci11gddm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1k5levf0j3ilyy17r38ci11gddm8'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:seat_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:traveller_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B14B2C0219E148E5BCCA7E3BEB838EBE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]</rows>
        <cols />
      </table>
      <simple-id uuid='{0EA25373-A3C2-4BA2-B087-38D0EC07F724}' />
    </worksheet>
    <worksheet name='Summary'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews.csv+ (Multiple Connections)' name='federated.1k5levf0j3ilyy17r38ci11gddm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1k5levf0j3ilyy17r38ci11gddm8'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[cabin_staff_service]' derivation='Avg' name='[avg:cabin_staff_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[entertainment]' derivation='Avg' name='[avg:entertainment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[food_beverages]' derivation='Avg' name='[avg:food_beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ground_service]' derivation='Avg' name='[avg:ground_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seat_comfort]' derivation='Avg' name='[avg:seat_comfort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value_for_money]' derivation='Avg' name='[avg:value_for_money:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:cabin_staff_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:entertainment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:food_beverages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:ground_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:seat_comfort:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:value_for_money:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:rating:qk]&quot;</bucket>
              <bucket>&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:cabin_staff_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:entertainment:qk]&quot;</bucket>
              <bucket>&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:food_beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:ground_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:seat_comfort:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action1_39FA2ABE96414E73A504A185FB5ADFEF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (Place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action2_805F71D6924D420981E5EA480FEF84A6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:Continent:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:seat_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:traveller_type:nk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[:Measure Names]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (MONTH(Date))]</column>
            <column>[federated.1k5levf0j3ilyy17r38ci11gddm8].[Action (Place)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[:Measure Names]' value='143' />
            <format attr='text-format' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Multiple Values]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1k5levf0j3ilyy17r38ci11gddm8].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#a3af60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Multiple Values]' />
              <text column='[federated.1k5levf0j3ilyy17r38ci11gddm8].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'><![CDATA[<[federated.1k5levf0j3ilyy17r38ci11gddm8].[Multiple Values]>]]></run>
                <run><![CDATA[
<[federated.1k5levf0j3ilyy17r38ci11gddm8].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1k5levf0j3ilyy17r38ci11gddm8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F6460F6D-7EB2-44AE-B9B0-90E4E7EE991C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='720' maxwidth='1200' minheight='720' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='ba_reviews.csv+ (Multiple Connections)' name='federated.1k5levf0j3ilyy17r38ci11gddm8' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
          <members>
            <member value='&quot;Overall Rating&quot;' />
            <member value='&quot;Cabin Staff Service&quot;' />
            <member value='&quot;Entertainment&quot;' />
            <member value='&quot;Food&quot;' />
            <member value='&quot;Ground Service&quot;' />
            <member value='&quot;Seat Comfort&quot;' />
            <member value='&quot;Value&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1k5levf0j3ilyy17r38ci11gddm8'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Various&quot;'>
              <value>&quot;777&quot;</value>
              <value>&quot;777-300 and A320&quot;</value>
              <value>&quot;787&quot;</value>
              <value>&quot;A19&quot;</value>
              <value>&quot;A219&quot;</value>
              <value>&quot;A230&quot;</value>
              <value>&quot;A318&quot;</value>
              <value>&quot;A319 / A380 / Boeing 737&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 747-400&quot;</value>
              <value>&quot;A319 / Boeing 777&quot;</value>
              <value>&quot;A319 / Boeing 787-8&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing 789&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A319/A320&quot;</value>
              <value>&quot;A320 / Boeing 747-400&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 777-200&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 / Boeing 787-9&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 neo&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320-233&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320, Boeing 787&quot;</value>
              <value>&quot;A320/319&quot;</value>
              <value>&quot;A320/A319&quot;</value>
              <value>&quot;A320/B788&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A320Neo&quot;</value>
              <value>&quot;A320NEO&quot;</value>
              <value>&quot;A321 / Boeing 747-400&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 / Boeing 777-300&quot;</value>
              <value>&quot;A321 / Boeing 787-9&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-200&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A321Neo&quot;</value>
              <value>&quot;A321NEO&quot;</value>
              <value>&quot;A322&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / A319&quot;</value>
              <value>&quot;A380 / A320&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 / Boeing 777&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380 and Boeing 747&quot;</value>
              <value>&quot;A380 and Boeing 767&quot;</value>
              <value>&quot;A380 and Boeing 777&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;A380/A320&quot;</value>
              <value>&quot;Airbus A32&quot;</value>
              <value>&quot;Airbus A320&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B747-400 in retro&quot;</value>
              <value>&quot;B777&quot;</value>
              <value>&quot;B777-200&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737&quot;</value>
              <value>&quot;Boeing 737 800&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / 777&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 &amp; A319&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777-200&quot;</value>
              <value>&quot;Boeing 747-400 / A319&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 747-400 / A380&quot;</value>
              <value>&quot;Boeing 747-400 /A380&quot;</value>
              <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
              <value>&quot;Boeing 757&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 767-300&quot;</value>
              <value>&quot;Boeing 767, A319&quot;</value>
              <value>&quot;Boeing 777&quot;</value>
              <value>&quot;Boeing 777 - 200&quot;</value>
              <value>&quot;Boeing 777 -200&quot;</value>
              <value>&quot;Boeing 777 / 747&quot;</value>
              <value>&quot;Boeing 777 / A320&quot;</value>
              <value>&quot;Boeing 777 / A380&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 200/300&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200 / 747-400&quot;</value>
              <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
              <value>&quot;Boeing 777-200 and A319&quot;</value>
              <value>&quot;Boeing 777-200 ER&quot;</value>
              <value>&quot;Boeing 777-200/300&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300 / A380&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 777-300ER / A320&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787 Dreamliner&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-8 / 787-9&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9 / 777&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-9 / A380-800&quot;</value>
              <value>&quot;Boeing 787-9, A320-200&quot;</value>
              <value>&quot;Boeing 787-9, A380&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;Boieng 777-200&quot;</value>
              <value>&quot;Dreamliner&quot;</value>
              <value>&quot;E-190&quot;</value>
              <value>&quot;E170 / A319&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;EMB190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
              <value>&quot;Embraer 195&quot;</value>
              <value>&quot;Embraer-190&quot;</value>
              <value>&quot;SAAB 2000&quot;</value>
              <value>&quot;Various&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone forceUpdate='true' h='13889' id='3' type-v2='text' w='16667' x='0' y='0'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='18'>British Airways Review</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#a3af60' />
          </zone-style>
        </zone>
        <zone h='13889' id='4' name='Summary' show-title='false' w='83333' x='16667' y='0' />
        <zone h='43056' id='5' name='Map' w='46667' x='53333' y='15278' />
        <zone h='84722' id='13' param='vert' type-v2='layout-flow' w='16667' x='0' y='15278'>
          <zone h='22778' id='12' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16667' x='0' y='15278'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='9583' id='6' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16667' x='0' y='38056'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='20278' id='7' mode='radiolist' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:traveller_type:nk]' type-v2='filter' w='16667' x='0' y='47639'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='17639' id='8' mode='radiolist' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:seat_type:nk]' type-v2='filter' w='16667' x='0' y='67917'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7222' id='9' mode='dropdown' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]' type-v2='filter' w='16667' x='0' y='85556'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7222' id='10' mode='dropdown' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:Continent:nk]' type-v2='filter' w='16667' x='0' y='92778'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='43056' id='14' name='Month' w='36667' x='16667' y='15278' />
        <zone h='41667' id='15' name='Aircraft' w='83333' x='16667' y='58333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97778' id='18' param='vert' type-v2='layout-flow' w='98666' x='667' y='1111'>
                <zone forceUpdate='true' h='13889' id='3' type-v2='text' w='16667' x='0' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='18'>British Airways Review</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#a3af60' />
                  </zone-style>
                </zone>
                <zone fixed-size='100' h='13889' id='4' is-fixed='true' name='Summary' show-title='false' w='83333' x='16667' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22778' id='12' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16667' x='0' y='15278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43056' id='14' is-fixed='true' name='Month' w='36667' x='16667' y='15278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9583' id='6' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16667' x='0' y='38056'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20278' id='7' mode='dropdown' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:traveller_type:nk]' type-v2='filter' w='16667' x='0' y='47639'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17639' id='8' mode='dropdown' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:seat_type:nk]' type-v2='filter' w='16667' x='0' y='67917'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7222' id='9' mode='dropdown' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]' type-v2='filter' w='16667' x='0' y='85556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7222' id='10' mode='dropdown' name='Map' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:Continent:nk]' type-v2='filter' w='16667' x='0' y='92778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43056' id='5' is-fixed='true' name='Map' w='46667' x='53333' y='15278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41667' id='15' is-fixed='true' name='Aircraft' w='83333' x='16667' y='58333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ADBFB060-1530-4D05-A850-DD5D9C970C89}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:traveller_type:nk]' type='filter' />
            <card mode='radiolist' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:seat_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]' type='color' />
            <card mode='dropdown' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[Aircraft (group)]' type='filter' />
            <card mode='dropdown' param='[federated.1k5levf0j3ilyy17r38ci11gddm8].[none:Continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C72A8F34-CA11-4AA9-BF99-4887FEFE2CA5}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{13342939-3810-4348-A70B-36CD72325D4D}' />
    </window>
    <window class='worksheet' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6DEF139E-90BC-43DF-9A72-8719B185405D}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{567457B2-D0A0-46ED-8100-A628F426A181}' />
    </window>
    <window class='worksheet' maximized='true' name='Aircraft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1k5levf0j3ilyy17r38ci11gddm8].[avg:Calculation_644085159531372545:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{87676C9C-C9B9-4763-8066-3F52E772FF84}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Aircraft'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Summary'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{47D1A0B2-7AE6-4D62-8561-C4E77206208C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Aircraft' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='Map' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Month' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='328'>
      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
      zrRq1Yq2bdve9adwU1NTiYyM5NSpU2RnZ/Poo4/SqlUr/Pz87vncxYO3jJWRIAAAIABJREFU
      f/9+vv76a+U32atVq4Zer+epp55i6tSpWFlZKXXPnz/PqFGjKrzvwYMH89ZbbymvqywgX3vt
      NeLj41XLNRoN/v7+9OnTh06dOt3r6T0Q3bt3p6CgACj5j/MwBeSRI0f46KOPKly/a9euTJ06
      VbU8LS2Nl19+WXm/UPLjYa+//rry+o033iA2NrbCx1y1ahWenp4Vrl/Z8yl1+/ZtQkJC2Lt3
      r0mZo6MjoaGhNG7c2OxxoqOjmTRpktkv7f79+/P2228/VP/d/61iYmIYO3YslpaWjB49ms6d
      O2NjY8Obb77JhQsX8PX15ZtvvlHq37p1i/3793O3mPvxxx+5efMmU6ZMoVu3bsr6h/YS22Aw
      cPz4cY4fP05hYSE9evSosnOpXr06NWrUuK9W0MPibu9hwYIFFBQUoNFo7vo/1YM65oM6n0mT
      JnH06FHltZeXF2lpaRQUFJCens7YsWNZuHAhDRs2NNouOjqa8ePHK1cJtra21KlTh6SkJAA2
      btzIrVu3KvVFJB48g8HA559/jsFgYPbs2Tz22GNK2bx583j//fc5deoUR48eJSAgAAArK6u7
      ZkdSUhIZGRm4ubnRtWtXo7IqD0hvb28WLFigvM7JySE1NZXt27cTFhYGlPyRVGVA7tixo8qO
      fTetWrXiu+++K7fOp59+qvyxl/c5njx5kvDwcKDkUmPt2rVm602aNKncK4fTp08r/039/Pxw
      dnYu9/zu93wA5Q8DSlqL8+bNw9PTk6KiIr766it27txJXl4eq1atYsqUKUbbLlu2TAnHoUOH
      8vrrr2NhYUFsbCzvvfce+fn57Ny5k6FDh+Lh4XFP70Xcv+TkZBITE+nYsaNROALY2NgwcuRI
      goODWbNmjRKQFbFq1Sr0ej0vvfSSyVVClV8zWFhYYGdnp/xzc3PDz8+PKVOmKG8yOzubtLQ0
      1X1cv36dEydOlFvnTgaDgaSkJKKjo8nLy7vv91FWfn4+V65cqdT55Ofnk5OTU+lj2dra0qJF
      C9V/Go1GCceWLVuq9qfpdDrmzJkDQMOGDenbt6/qMb29vcs95vHjx5W6w4cPr/R7quz5QEkr
      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
    </thumbnail>
    <thumbnail height='116' name='Summary' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
